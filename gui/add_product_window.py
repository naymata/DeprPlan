# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\add_product_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import pyqtSignal

from models import product as p
from models.asset_classes import AssetClass
from models.product import Product


class Ui_Form(QtWidgets.QWidget):
    product_added = pyqtSignal(int, list, str)

    def __init__(self, product_list: list):
        super().__init__()
        self.setup_ui(self)
        self.retranslate_ui(self)
        self.product_list = product_list

    def setup_ui(self, Form):
        Form.setObjectName("Form")
        Form.resize(673, 294)
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(40, 30, 81, 21))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(40, 70, 71, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(40, 100, 111, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(40, 140, 81, 16))
        self.label_4.setObjectName("label_4")

        self.product_name = QtWidgets.QLineEdit(Form)
        self.product_name.setGeometry(QtCore.QRect(160, 30, 113, 20))
        self.product_name.setObjectName("product_name")
        self.product_price = QtWidgets.QLineEdit(Form)
        self.product_price.setGeometry(QtCore.QRect(160, 70, 113, 20))
        self.product_price.setObjectName("product_price")
        self.product_salvage_value = QtWidgets.QLineEdit(Form)
        self.product_salvage_value.setGeometry(QtCore.QRect(160, 100, 113, 20))
        self.product_salvage_value.setObjectName("product_salvage_value")
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setGeometry(QtCore.QRect(320, 0, 361, 301))
        self.textBrowser.setObjectName("textBrowser")
        self.comboBox = QtWidgets.QComboBox(Form)
        self.comboBox.setGeometry(QtCore.QRect(160, 140, 150, 22))
        self.comboBox.setObjectName("comboBox")
        self.init_class_combo_box()

        self.addBtn = QtWidgets.QPushButton(Form)
        self.addBtn.clicked.connect(self.add_btn)
        self.addBtn.setGeometry(QtCore.QRect(120, 200, 75, 23))
        self.addBtn.setObjectName("addBtn")

        self.cancelBtn = QtWidgets.QPushButton(Form)
        self.cancelBtn.clicked.connect(self.close_btn)
        self.cancelBtn.setGeometry(QtCore.QRect(120, 240, 75, 23))
        self.cancelBtn.setObjectName("cancelBtn")

        self.retranslate_ui(Form)

        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslate_ui(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "Product name:"))
        self.label_2.setText(_translate("Form", "Product price:"))
        self.label_3.setText(_translate("Form", "Product salvage value"))
        self.label_4.setText(_translate("Form", "Product Class"))
        self.textBrowser.setHtml(_translate("Form",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt; font-weight:600;\">    Class Information:</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Class I</span><span style=\" font-size:9pt;\">- Tractor,qualified rent-to-own  property</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Class II</span><span style=\" font-size:9pt;\">- Vehicles,computers,office,equipment,appliances for a rental property</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Class III</span><span style=\" font-size:9pt;\">- Office furniture and fixtures,farm equipment, any assets, that don\'t fit into other classes</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Class IV</span><span style=\" font-size:9pt;\">-Boats, single-purpose farm structures</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Class V</span><span style=\" font-size:9pt;\">- Land improvement(landscaping,roads,bridges)</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Class VI</span><span style=\" font-size:9pt;\">- Multiple-purpose farm structures</span></p></body></html>"))
        self.addBtn.setText(_translate("Form", "Add"))
        self.cancelBtn.setText(_translate("Form", "Cancel"))

    def add_btn(self):
        try:
            p_name = self.product_name.text().strip()
            try:
                p_price = p.dep.Decimal(self.product_price.text().strip())
                p_salvage_value = p.dep.Decimal(self.product_salvage_value.text().strip())
            except Exception as e:
                QtWidgets.QMessageBox.warning(self, 'Invalid prices', 'prices are in invalid')
                return

            if p_name.strip() == "":
                QtWidgets.QMessageBox.warning(self, 'Invalid name', 'Name is invalid')
                return

            p_class_str = self.comboBox.currentText()
            p_class = next((cls for cls in AssetClass if cls.value == p_class_str), None)
            if p_class is None:
                QtWidgets.QMessageBox.warning(self, 'Error', 'Class not selecting')
                return
            new_product = Product(p_name, p_price, p_salvage_value, p_class)
            self.product_list.append(new_product)
            self.product_added.emit(len(self.product_list), self.product_list, 'Product added successfully')
            self.close()

        except Exception as e:
            QtWidgets.QMessageBox.critical(self, 'Critical error', f'{e}')

    def close_btn(self):
        try:
            self.close()
        except Exception as e:
            QtWidgets.QMessageBox.critical(self, 'Error', f'{e}')

    def init_class_combo_box(self):
        self.comboBox.clear()
        for x in AssetClass:
            self.comboBox.addItem(x.value)
